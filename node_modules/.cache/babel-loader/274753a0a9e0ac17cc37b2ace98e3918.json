{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/WebstormProjects/logic-game/src/components/cardBoard.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst CardBoard = () => {\n  const [value, setValue] = useState('');\n\n  const taskGenerator = () => {\n    let operator = ['+', '-', '*', '/'];\n    let m = Math.floor(Math.random() * 10);\n    let n = Math.floor(Math.random() * 10);\n    let index = [Math.floor(Math.random())];\n    return `${n}${operator[index]}${m}`;\n  };\n\n  const changeValueHandler = event => {\n    setValue(parseInt(event.target.value));\n    console.log(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Start Game\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"title\",\n    className: \"form-control\",\n    id: \"title\",\n    value: value,\n    name: \"title\",\n    onChange: changeValueHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Start Game\"));\n};\n\nexport default CardBoard;","map":{"version":3,"sources":["/Users/andrey/WebstormProjects/logic-game/src/components/cardBoard.js"],"names":["React","useState","useDispatch","CardBoard","value","setValue","taskGenerator","operator","m","Math","floor","random","n","index","changeValueHandler","event","parseInt","target","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAGA,MAAOC,SAAS,GAAG,MAAK;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMK,aAAa,GAAG,MAAK;AACvB,QAAIC,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAf;AACA,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAR;AACA,QAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAR;AACA,QAAIE,KAAK,GAAG,CAACJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAAZ;AACA,WAAQ,GAAEC,CAAE,GAAEL,QAAQ,CAACM,KAAD,CAAQ,GAAEL,CAAE,EAAlC;AAEH,GAPD;;AAQA,QAAMM,kBAAkB,GAAGC,KAAK,IAAI;AAChCV,IAAAA,QAAQ,CAACW,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAab,KAAd,CAAT,CAAR;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACH,GAHD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,EAAE,EAAG,OAHT;AAII,IAAA,KAAK,EAAEA,KAJX;AAKI,IAAA,IAAI,EAAG,OALX;AAMI,IAAA,QAAQ,EAAEU,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAYI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,CADJ;AAiBH,CAnCD;;AAoCA,eAAeX,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst  CardBoard = () =>{\n    const [value, setValue] = useState('')\n\n\n    const taskGenerator = () =>{\n        let operator = ['+','-','*','/']\n        let m = Math.floor(Math.random()*10);\n        let n = Math.floor(Math.random()*10);\n        let index = [Math.floor(Math.random())]\n        return `${n}${operator[index]}${m}`;\n\n    }\n    const changeValueHandler = event => {\n        setValue(parseInt(event.target.value))\n        console.log(value)\n    }\n\n\n    return(\n        <form >\n            <div className=\"form-group\">\n                <label htmlFor='title'>Start Game</label>\n                <input\n                    type='title'\n                    className='form-control'\n                    id = 'title'\n                    value={value}\n                    name = 'title'\n                    onChange={changeValueHandler}\n                />\n            </div>\n            <button className='btn btn-primary' type='submit'>Start Game</button>\n            {/* /.form-group */}\n        </form>\n    )\n}\nexport default CardBoard"]},"metadata":{},"sourceType":"module"}